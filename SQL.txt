CREATE DATABASE TTPetShop
go
USE TTPetShop
go


CREATE TABLE Products (
	productID INT PRIMARY KEY IDENTITY NOT NULL,
	name NVARCHAR(255) NOT NULL,
	price INT NOT NULL DEFAULT '0',
	categoryID integer,
	description text,
	pic VARBINARY(MAX) ,
	quantity integer NOT NULL DEFAULT '1',
	viewed INTEGER DEFAULT 0

)
GO


SELECT * FROM dbo.Products
GO
---------------------------------------------------------------------------------------------
CREATE PROC updatePro @id INT, @name NVARCHAR(255), @price FLOAT, @categoryID INTEGER, @description TEXT, @pic VARBINARY(MAX), @quantity INTEGER, @viewed INTEGER
AS
BEGIN
	IF (DATALENGTH(@pic)!=0)
	BEGIN
		UPDATE dbo.Products SET name=@name, price=@price, categoryID=@categoryID, description=@description, pic=@pic, quantity=@quantity, viewed=@viewed WHERE productID=@id
	END
	ELSE
	BEGIN
		UPDATE dbo.Products SET name=@name, price=@price, categoryID=@categoryID, description=@description, quantity=@quantity, viewed=@viewed WHERE productID=@id
	END
END
go

CREATE PROC getProByID @id INT
AS
BEGIN
    SELECT *
	FROM dbo.Products WHERE productID=@id
END
go
-------------------------------------------------------------------------------------------------
CREATE TABLE Users(
	userID varchar(20) PRIMARY KEY NOT NULL,
	email VARCHAR(255) NOT NULL,
	password varchar(20) NOT NULL,
	fullname NVARCHAR(255) NOT NULL,
	address VARCHAR(255),
	phone varchar(50),
	coins integer NOT NULL DEFAULT 0,
	role integer NOT NULL DEFAULT 0
)
GO

SELECT * from (SELECT ROW_NUMBER() OVER (ORDER BY coins) AS r, *FROM dbo.Users) AS sub  WHERE sub.r between (2-1)*3+1 AND 2*3
go


INSERT INTO dbo.Users
(
    userID,
	email,
    password,
    fullname,
    address,
    phone,
    role
)
VALUES
(   'thanh141121',   -- userID - varchar(20)
	'abc@gmail.com',
    '141121',   -- password - varchar(20)
    N'Thanh Trung Trần',  -- fullname - nvarchar(255)
    'dong nai',   -- address - varchar
    '0338989824',   -- phone - varchar
    1  -- role - integer
    );

INSERT INTO dbo.Users
(
    userID,
	email,
    password,
    fullname,
    address,
    phone,
    role
)
VALUES
(   'thanh1411',   -- userID - varchar(20)
	'nhanvien@gmail.com',
    '141121',   -- password - varchar(20)
    N'Thanh Trung Trần',  -- fullname - nvarchar(255)
    'dong nai',   -- address - varchar
    '0338989824',   -- phone - varchar
    0  -- role - integer
    );


go

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE Cart (
	cartID INT PRIMARY KEY IDENTITY,
	userID VARCHAR(20) NOT NULL REFERENCES Users(userID),
	total int DEFAULT 0
)
GO
CREATE TABLE DetailCart (
	cartID integer NOT NULL,
	productID integer NOT NULL,
	quantity integer NOT NULL DEFAULT 1,
	FOREIGN KEY(cartID) REFERENCES Cart(cartID),
	FOREIGN KEY(productID) REFERENCES dbo.Products(productID)

)
GO
CREATE TRIGGER us_afterEditCartDetail ON dbo.DetailCart AFTER INSERT,UPDATE
AS
BEGIN
    DECLARE @total INT
	DECLARE @CartID int
	SELECT CartID=i.cartID FROM Inserted AS i
	SELECT @total=SUM(total)
	FROM (SELECT dtc.quantity*pr.price AS total FROM dbo.DetailCart AS dtC, dbo.Products AS pr WHERE cartID=@CartID AND dtC.productID = pr.productID) AS br
	UPDATE dbo.Cart SET total=@total WHERE cartID=@CartID

END
GO
CREATE TRIGGER us_afterDelCartDetail ON dbo.DetailCart FOR DELETE
AS 
BEGIN
	DECLARE @total INT
	DECLARE @CartID int
	SELECT CartID=i.cartID FROM Deleted AS i
	SELECT @total=ISNULL(SUM(total), 0) 
	FROM (SELECT dtc.quantity*pr.price AS total FROM dbo.DetailCart AS dtC, dbo.Products AS pr WHERE cartID=@CartID AND dtC.productID = pr.productID) AS br
	UPDATE dbo.Cart SET total=@total WHERE cartID=@CartID

END
GO
SELECT ISNULL(SUM(total), 0)  FROM dbo.Bill go
SELECT CONVERT(varchar,date,113) as [DD MMM YYYY HH:MM:SS:MMM] FROM dbo.Bill go
SELECT CONVERT(varchar,date,113) AS date FROM dbo.Bill go
SELECT CONVERT(varchar,date,0) AS date FROM dbo.Bill go

----------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE Discount (
	discountID varchar PRIMARY KEY,
	quantity integer NOT NULL DEFAULT '1',
	desDiscount varchar NOT NULL,

)
GO
CREATE TABLE Bill (
	billID integer PRIMARY KEY IDENTITY,
	userID VARCHAR(20) NOT NULL REFERENCES Users(userID),
	total int NOT NULL DEFAULT 0,
	discountID VARCHAR REFERENCES Discount(discountID),
	date datetime DEFAULT GETDATE(),
	status integer NOT NULL DEFAULT '0' --0:cho xac nhan ; 1: dang giao; 2: da nhan hang; 3: da danh gia
)
GO
CREATE TABLE DetailBill (
	billID integer NOT NULL REFERENCES Bill(billID),
	productID integer NOT NULL REFERENCES Products(productID) ,
	quantity integer NOT NULL DEFAULT 1
)
GO
CREATE TABLE Category (
	categoryID integer PRIMARY KEY ,
	nameCat Nvarchar(255)

)
GO
INSERT INTO dbo.Category
(
    categoryID,
    nameCat
)
VALUES
(   1, -- categoryID - int
    N'Chuồng cho thú cưng' -- nameCat - varchar(255)
    )

INSERT INTO dbo.Category
(
    categoryID,
    nameCat
)
VALUES
(   2, -- categoryID - int
    N'Đồ chơi cho thú cưng' -- nameCat - varchar(255)
    )
INSERT INTO dbo.Category
(
    categoryID,
    nameCat
)
VALUES
(   3, -- categoryID - int
    N'Phụ kiện cho thú cưng' -- nameCat - varchar(255)
    )

INSERT INTO dbo.Category
(
    categoryID,
    nameCat
)
VALUES
(   4, -- categoryID - int
    N'Thức ăn cho thú cưng' -- nameCat - varchar(255)
    )

INSERT INTO dbo.Category
(
    categoryID,
    nameCat
)
VALUES
(   5, -- categoryID - int
    N'Thuốc cho thú cưng' -- nameCat - varchar(255)
    )

INSERT INTO dbo.Category
(
    categoryID,
    nameCat
)
VALUES
(   6, -- categoryID - int
    N'Thời trang cho thú cưng' -- nameCat - varchar(255)
    )

GO
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE TABLE review (
	id INT PRIMARY KEY IDENTITY,
	productID INT REFERENCES dbo.Products(productID),
	userID varchar(20) REFERENCES dbo.Users(userID),
	rating FLOAT DEFAULT 0,
	review TEXT,
)
go
------------------------------------------------------
ALTER TABLE Products WITH CHECK ADD CONSTRAINT Products_fk0 FOREIGN KEY (categoryID) REFERENCES Category(categoryID)
go

-----------------------------------------------------------store proc--------------------------------------------------------


---------------------------------------------------trigger for user----------------------------------------------------------
CREATE TRIGGER ad_afterCreUs ON dbo.Users AFTER INSERT
AS BEGIN
		DECLARE @userID VARCHAR(20)
		SELECT @userID=i.userID FROM Inserted AS i
       INSERT dbo.Cart
       (
           userID
       )
       VALUES
       (   @userID
           )
   END
GO